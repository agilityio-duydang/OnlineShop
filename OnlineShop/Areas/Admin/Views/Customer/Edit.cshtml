@model OnlineShop.Areas.Admin.Models.CustomerModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Shared/_Layout.cshtml";
}
@section Header {
    <link rel="stylesheet" href="/Assets/Admin/bower_components/bootstrap/dist/css/bootstrap.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="/Assets/Admin/bower_components/font-awesome/css/font-awesome.min.css">
    <!-- Ionicons -->
    <link rel="stylesheet" href="/Assets/Admin/bower_components/Ionicons/css/ionicons.min.css">
    <!-- daterange picker -->
    <link rel="stylesheet" href="/Assets/Admin/bower_components/bootstrap-daterangepicker/daterangepicker.css">
    <!-- bootstrap datepicker -->
    <link rel="stylesheet" href="/Assets/Admin/bower_components/bootstrap-datepicker/dist/css/bootstrap-datepicker.min.css">
    <!-- iCheck for checkboxes and radio inputs -->
    <link rel="stylesheet" href="/Assets/Admin/plugins/iCheck/all.css">
    <!-- Bootstrap Color Picker -->
    <link rel="stylesheet" href="/Assets/Admin/bower_components/bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css">
    <!-- Bootstrap time Picker -->
    <link rel="stylesheet" href="/Assets/Admin/plugins/timepicker/bootstrap-timepicker.min.css">
    <!-- Select2 -->
    <link rel="stylesheet" href="/Assets/Admin/bower_components/select2/dist/css/select2.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="/Assets/Admin//dist/css/AdminLTE.min.css">
    <!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
    <link rel="stylesheet" href="/Assets/Admin/dist/css/skins/_all-skins.min.css">

}
@using (Html.BeginForm("Edit", "Customer", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="box box-header">
        <div class="content-header clearfix">
            <h1 class="pull-left">
                Chỉnh sửa người dùng
                <small>
                    <i class="fa fa-arrow-circle-left"></i>
                    <a href="/Admin/Customer/Index">Trở lại danh sách</a>
                </small>
            </h1>
            <div class="pull-right">
                <button type="submit" name="save" class="btn bg-blue">
                    <i class="fa fa-floppy-o"></i> Save
                </button>
                <button type="submit" name="save-continue" class="btn bg-blue">
                    <i class="fa fa-floppy-o"></i> Save and Continue Edit
                </button>
            </div>
        </div>
    </div>
    <div class="box box-info">
        <div class="box-header with-border">
            <div class="form-horizontal">
                <form class="box box-info">
                    <div class="box-header with-border">
                        <h3 class="box-title">Thông tin</h3>
                    </div>
                    <div class="box-body">
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="input-group">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                    <span class="input-group-btn">
                                        <button type="button" class="btn btn-info btn-flat">Change Password</button>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="row">
                                    <div class="col-md-1 flat-red">
                                        @Html.RadioButtonFor(model => model.Gender, true, htmlAttributes: new { @class = "flat-red" })
                                        <label class="control-label" style="font-size:15px">&nbsp;&nbsp;Nam</label>
                                    </div>
                                    <div class="col-md-11">
                                        @Html.RadioButtonFor(model => model.Gender, false, htmlAttributes: new { @class = "flat-red" })
                                        <label class="control-label" style="font-size:15px">&nbsp;&nbsp;Nữ</label>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control pull-right", id = "datepicker" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.SelectedCustomerRoleIds, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.SelectedCustomerRoleIds, null, htmlAttributes: new { @class = "form-control select2", @multiple = "multiple" })
                                @Html.ValidationMessageFor(model => model.SelectedCustomerRoleIds, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.VendorId, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.DropDownListFor(model => model.VendorId, (SelectList)ViewBag.AvailableVendors, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VendorId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(model => model.Active, htmlAttributes: new { @class = "flat-red" })
                                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.AdminComment, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-9">
                                @Html.TextAreaFor(model => model.AdminComment, htmlAttributes: new { @class = "form-control", @rows = "3" })
                                @Html.ValidationMessageFor(model => model.AdminComment, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.LastIpAddress, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-control">

                                    @Html.DisplayFor(model => model.LastIpAddress)
                                    @Html.ValidationMessageFor(model => model.LastIpAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.CreatedOnUtc, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.CreatedOnUtc)
                                </div>
                                @Html.ValidationMessageFor(model => model.CreatedOnUtc, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-3">
                                <div class="label-wrapper">
                                    @Html.LabelFor(model => model.LastActivityDateUtc, htmlAttributes: new { @class = "control-label" })
                                    <div title="" data-toggle="tooltip" class="ico-help">
                                        <i class="fa fa-question-circle"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-control">
                                    @Html.DisplayFor(model => model.LastActivityDateUtc)
                                    @Html.ValidationMessageFor(model => model.LastActivityDateUtc, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="box box-default">
        <div class="box-header with-border">
            <i class="fa fa-cart-plus panel-icon"></i>
            <h3 class="box-title">Orders</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <table id="example1" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Order #</th>
                        <th>Order total	</th>
                        <th>Order status</th>
                        <th>Payment status</th>
                        <th>Shipping status	</th>
                        <th>Created on</th>
                        <th class="text-center">View</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Orders)
                    {
                        <tr id="row_@item.Id">
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.CustomOrderNumber)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.OrderTotal)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.OrderStatusId)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.PaymentStatusId)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.ShippingStatusId)
                            </td>
                            <td style="vertical-align: inherit" class=" text-center">
                                <a class="btn btn-primary" href="/Order/Edit/@item.Id"><i class="fa fa-eye"></i>&nbsp;&nbsp;View</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @*@Html.PagedListPager(Model.Orders, page => Url.Action("Index", new { page }))*@
        </div>
        <div class="box-footer">
        </div>
    </div>

    <div class="box box-default">
        <div class="box-header with-border">
            <i class="fa fa-address-book-o panel-icon"></i>
            <h3 class="box-title">Addresses</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <table id="example1" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>First name</th>
                        <th>Last name</th>
                        <th>Email</th>
                        <th>Phone number</th>
                        <th>Fax number</th>
                        <th>Address</th>
                        <th class="text-center">Edit</th>
                        <th class="text-center">Delete</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Addresses)
                    {
                        <tr id="row_@item.Id">
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.FaxNumber)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.Address1)
                                @Html.DisplayFor(modelItem => item.Address2)
                            </td>
                            <td style="vertical-align: inherit" class=" text-center">
                                <a class="btn btn-primary" href="/Admin/Address/Edit/?customerId=@Model.Id&addressId=@item.Id"><i class="fa fa-edit"></i>&nbsp;&nbsp;Edit</a>
                            </td>
                            <td style="vertical-align: inherit" class=" text-center">
                                <a class="btn btn-danger" href="/Admin/Address/Delete/?customerId=@Model.Id&addressId=@item.Id"><i class="fa fa-remove"></i>&nbsp;&nbsp;Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @*@Html.PagedListPager(Model.Orders, page => Url.Action("Index", new { page }))*@
            <div class="panel-body">
                <a class="btn bg-blue" href="/Admin/Address/Create/?customerId=@Model.Id"> <i class="fa fa-plus-square"></i> Add new </a>
            </div>
        </div>
        <div class="box-footer">
        </div>
    </div>

    <div class="box box-default">
        <div class="box-header with-border">
            <i class="fa fa-shopping-cart panel-icon"></i>
            <h3 class="box-title">Current shopping cart and wishlist</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="panel-body">
            <div class="form-group">
                <div class="col-md-3">
                    <div class="label-wrapper pull-right">
                        <label class="control-label" for="SearchShopping">Shopping cart type</label>
                    </div>
                </div>
                <div class="col-md-9">
                    <select class="form-control select2" style="width: 100%;">
                        <option selected="selected" value="1">Shopping Cart</option>
                        <option value="2">Wishlist</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="box-body">
            <table id="example1" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Unit price</th>
                        <th>Total</th>
                        <th>Updated on</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ShoppingCartItems)
                    {
                        <tr id="row_@item.Id">
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.ProductId)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.Product.Price)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.Product.ProductCost);
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.UpdatedOnUtc)
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @*@Html.PagedListPager(Model.Orders, page => Url.Action("Index", new { page }))*@
        </div>
        <div class="box-footer">
        </div>
    </div>

    <div class="box box-default">
        <div class="box-header with-border">
            <i class="fa fa-list-alt panel-icon"></i>
            <h3 class="box-title">Activity log</h3>

            <div class="box-tools pull-right">
                <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
                <button type="button" class="btn btn-box-tool" data-widget="remove"><i class="fa fa-remove"></i></button>
            </div>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <table id="example1" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Activity Log Type</th>
                        <th>IP address</th>
                        <th>Comment</th>
                        <th>Created on</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.ActivityLogs)
                    {
                        <tr id="row_@item.Id">
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.ActivityLogType)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.IpAddress)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.Comment)
                            </td>
                            <td style="vertical-align: inherit">
                                @Html.DisplayFor(modelItem => item.CreatedOnUtc);
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @*@Html.PagedListPager(Model.Orders, page => Url.Action("Index", new { page }))*@
        </div>
        <div class="box-footer">
        </div>
    </div>
}
@section Footer {
    <script src="/Assets/Admin/bower_components/jquery/dist/jquery.min.js"></script>
    <script src="/Assets/Admin/bower_components/jquery-ui/jquery-ui.min.js"></script>

    <!-- Bootstrap 3.3.7 -->
    <script src="/Assets/Admin/bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <!-- Select2 -->
    <script src="/Assets/Admin/bower_components/select2/dist/js/select2.full.min.js"></script>
    <!-- InputMask -->
    <script src="/Assets/Admin/plugins/input-mask/jquery.inputmask.js"></script>
    <script src="/Assets/Admin/plugins/input-mask/jquery.inputmask.date.extensions.js"></script>
    <script src="/Assets/Admin/plugins/input-mask/jquery.inputmask.extensions.js"></script>
    <!-- date-range-picker -->
    <script src="/Assets/Admin/bower_components/moment/min/moment.min.js"></script>
    <script src="/Assets/Admin/bower_components/bootstrap-daterangepicker/daterangepicker.js"></script>
    <!-- bootstrap datepicker -->
    <script src="/Assets/Admin/bower_components/bootstrap-datepicker/dist/js/bootstrap-datepicker.min.js"></script>
    <!-- bootstrap color picker -->
    <script src="/Assets/Admin/bower_components/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js"></script>
    <!-- bootstrap time picker -->
    <script src="/Assets/Admin/plugins/timepicker/bootstrap-timepicker.min.js"></script>
    <!-- SlimScroll -->
    <script src="/Assets/Admin/bower_components/jquery-slimscroll/jquery.slimscroll.min.js"></script>
    <!-- iCheck 1.0.1 -->
    <script src="/Assets/Admin/plugins/iCheck/icheck.min.js"></script>
    <!-- FastClick -->
    <script src="/Assets/Admin/bower_components/fastclick/lib/fastclick.js"></script>
    <!-- AdminLTE App -->
    <script src="/Assets/Admin/dist/js/adminlte.min.js"></script>
    <!-- AdminLTE for demo purposes -->
    <script src="/Assets/Admin/dist/js/demo.js"></script>
    <!-- Page script -->
    <script>
        $(document).ready(function () {
            $('.sidebar-menu').tree()
        })
    </script>
    <script>
        $(function () {
            //Initialize Select2 Elements
            $('.select2').select2()

            //Datemask dd/mm/yyyy
            $('#datemask').inputmask('dd/mm/yyyy', { 'placeholder': 'dd/mm/yyyy' })
            //Datemask2 mm/dd/yyyy
            $('#datemask2').inputmask('mm/dd/yyyy', { 'placeholder': 'mm/dd/yyyy' })
            //Money Euro
            $('[data-mask]').inputmask()

            //Date range picker
            $('#reservation').daterangepicker()
            //Date range picker with time picker
            $('#reservationtime').daterangepicker({ timePicker: true, timePickerIncrement: 30, locale: { format: 'MM/DD/YYYY hh:mm A' } })
            //Date range as a button
            $('#daterange-btn').daterangepicker(
                {
                    ranges: {
                        'Today': [moment(), moment()],
                        'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                        'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                        'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                        'This Month': [moment().startOf('month'), moment().endOf('month')],
                        'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                    },
                    startDate: moment().subtract(29, 'days'),
                    endDate: moment()
                },
                function (start, end) {
                    $('#daterange-btn span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'))
                }
            )

            //Date picker
            $('#datepicker').datepicker({
                autoclose: true
            })

            //iCheck for checkbox and radio inputs
            $('input[type="checkbox"].minimal, input[type="radio"].minimal').iCheck({
                checkboxClass: 'icheckbox_minimal-blue',
                radioClass: 'iradio_minimal-blue'
            })
            //Red color scheme for iCheck
            $('input[type="checkbox"].minimal-red, input[type="radio"].minimal-red').iCheck({
                checkboxClass: 'icheckbox_minimal-red',
                radioClass: 'iradio_minimal-red'
            })
            //Flat red color scheme for iCheck
            $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
                checkboxClass: 'icheckbox_flat-green',
                radioClass: 'iradio_flat-green'
            })

            //Colorpicker
            $('.my-colorpicker1').colorpicker()
            //color picker with addon
            $('.my-colorpicker2').colorpicker()

            //Timepicker
            $('.timepicker').timepicker({
                showInputs: false
            })
        })
    </script>
}